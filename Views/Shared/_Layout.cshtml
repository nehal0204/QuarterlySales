@using Microsoft.AspNetCore.Identity;
@using QuarterlySales.Models.DataAcccess;
@inject SignInManager<User> signInManager;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    <header>
        @* based on default navbar that comes with MVC template *@
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            @* go to action method that clears route segments and then loads home page *@
                            <a class="nav-link text-dark" asp-controller="Home" asp-action="Clear">Home</a>
                        </li>
                        @if (signInManager.IsSignedIn(User))
                        {

                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-controller="Sales" asp-action="Add">Add Sales</a>
                            </li>
                        }

                        @if (signInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-controller="Employee" asp-action="Add">Add Employee</a>
                            </li>
                        }

                        

                    </ul>
                </div>

                <div class="d-flex">
                    <ul class="navbar-nav flex-grow-1">
                        @if (signInManager.IsSignedIn(User))
                        {
                            <li class="nav-item"><div class="navbar-brand">Welcome @User.Identity.Name!</div></li>
                            @if (signInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="User" asp-action="Index">Manage Users </a>
                                </li>
                            }
                            <li class="nav-item"><a asp-controller="Account" asp-action="Logout" class="nav-link text-dark">LogOut</a></li>
                        }

                        else
                        {
                            <li class="nav-item"><a asp-controller="Account" asp-action="Register" class="nav-link text-dark">Register</a></li>
                            <li class="nav-item"><a asp-controller="Account" asp-action="Login" class="nav-link text-dark">Login</a></li>
                        }


                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @if (TempData.Keys.Contains("message"))
            {
                <h2 class="bg-light text-center p-2 mb-2">@TempData["message"]</h2>
            }
            @RenderBody()
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    @RenderSection("Scripts", required: false)
</body>
</html>
